name: Coder Nest

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use an appropriate version for your app

      # Step 3: Install backend dependencies
      - name: Install backend dependencies
        working-directory: ./server
        run: npm install

      # Step 4: Run backend tests (if any)
      - name: Run backend tests
        working-directory: ./server
        run: npm test

      # Step 5: Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./client
        run: npm install

      # Step 6: Build frontend
      - name: Build frontend
        working-directory: ./client
        run: npm run build

      # Step 7: Deploy frontend to Vercel
      - name: Deploy frontend to Vercel
        working-directory: ./client
        run: npx vercel --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      # Step 8: Deploy backend to a hosting platform (e.g., Render, AWS, or Heroku)
      # Replace this with the appropriate deployment command for your backend
      - name: Deploy backend to Vercel (if using Vercel for backend)
        working-directory: ./server
        run: npx vercel --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      # If deploying to AWS, Render, or Heroku, use the appropriate deployment step:
      # - name: Deploy backend to Heroku
      #   run: |
      #     git remote add heroku https://git.heroku.com/your-heroku-app.git
      #     git push heroku main
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
